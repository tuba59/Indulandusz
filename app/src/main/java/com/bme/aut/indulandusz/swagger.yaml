# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  version: "1.0.0"
  title: Indulandusz API
# the domain of the service
host: futar.bkk.hu
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /bkk-utvonaltervezo-api/ws/otp/api/where
produces:
  - application/json
# Describe your paths here
paths:
  # This is a path endpoint. Change it.
  /search.json:
    # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Search for stops or vehicles
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        - name: key
          in: query
          description: API key
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: API version
          required: false
          type: number
        - name: appVersion
          in: query
          description: version of the application using the API
          required: false
          type: string
        - name: includeReferences
          in: query
          description: reference types included in the response
          required: false
          type: string
        - name: query
          in: query
          description: the search criteria
          required: false
          type: string
      # Expected responses
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: ArrayOfResults
            type: array
            items:
              title: Results
              type: object
              properties:
                name:
                  type: string
                single:
                  type: boolean
  /stops-for-location.json:
      # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Search for stops nearby
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        - name: key
          in: query
          description: API key
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: API version
          required: false
          type: number
        - name: appVersion
          in: query
          description: version of the application using the API
          required: false
          type: string
        - name: includeReferences
          in: query
          description: reference types included in the response
          required: false
          type: string
        - name: lon
          in: query
          description: longitude
          required: true
          type: number
        - name: lat
          in: query
          description: latitude
          required: true
          type: number
        - name: query
          in: query
          description: the search criteria
          required: false
          type: string
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: ArrayOfResults
            type: array
            items:
              title: Results
              type: object
              properties:
                name:
                  type: string
                single:
                  type: boolean
  /arrivals-and-departures-for-stop.json:
   # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        Arriving and departing vehicles for a certain stop
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        - name: key
          in: query
          description: API key
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: API version
          required: false
          type: number
        - name: appVersion
          in: query
          description: version of the application using the API
          required: false
          type: string
        - name: includeReferences
          in: query
          description: reference types included in the response
          required: false
          type: string
        - name: stopId
          in: query
          description: id of the stop
          required: true
          type: string
        - name: onlyDepartures
          in: query
          description: display only departures
          required: false
          type: boolean
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: ArrayOfResults
            type: array
            items:
              title: Results
              type: object
              properties:
                name:
                  type: string
                single:
                  type: boolean
  /schedule-for-stop.json:
   # This is a HTTP operation
    get:
      # Describe this verb here. Note: you can use markdown
      description: |
        A stop's scheadule with live data update
      # This is array of GET operation parameters:
      parameters:
        # An example parameter that is in query and is required
        - name: key
          in: query
          description: API key
          required: true
          type: string
          format: uuid
        - name: version
          in: query
          description: API version
          required: false
          type: number
        - name: appVersion
          in: query
          description: version of the application using the API
          required: false
          type: string
        - name: includeReferences
          in: query
          description: reference types included in the response
          required: false
          type: string
        - name: stopId
          in: query
          description: id of the stop
          required: true
          type: string
        - name: onlyDepartures
          in: query
          description: display only departures
          required: false
          type: boolean
        - name: date
          in: query
          description: display only departures
          required: false
          type: string
      # Expected responses for this operation:
      responses:
        # Response code
        200:
          description: Successful response
          # A schema describing your response object.
          # Use JSON Schema format
          schema:
            title: ArrayOfResults
            type: array
            items:
              title: Results
              type: object
              properties:
                name:
                  type: string
                single:
                  type: boolean